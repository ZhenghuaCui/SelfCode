<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:AduSkin="clr-namespace:AduSkin.Controls.Metro"
      xmlns:AduAttach="clr-namespace:AduSkin.Controls.Attach">
   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="/AduSkin;component/Themes/Metro/MetroBase.xaml"/>
   </ResourceDictionary.MergedDictionaries>

   <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type AduSkin:AduToggleButton}">
      <Grid Background="Transparent">
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
         </Grid.ColumnDefinitions>
         <Border x:Name="ShadowBorder" Grid.ColumnSpan="2" CornerRadius="{TemplateBinding AduAttach:BorderAttach.CornerRadius}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
         <Border Name="Border" Grid.ColumnSpan="2" CornerRadius="{TemplateBinding AduAttach:BorderAttach.CornerRadius}" BorderBrush="#D9D9D9" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
         <Border Name="ButtonBorder" Grid.Column="1" CornerRadius="{TemplateBinding AduAttach:BorderAttach.CornerRadius}" Margin="1, 1, 1, 1" Padding="5,0,8,0">
            <Path Name="Arrow" Grid.Column="1" Width="10" HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{StaticResource Icon_DropDowm}"
                      Fill="{TemplateBinding Foreground}"
                      RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stretch="Uniform"
                      UseLayoutRounding="True">
               <Path.RenderTransform>
                  <TransformGroup>
                     <ScaleTransform />
                     <SkewTransform />
                     <RotateTransform />
                     <TranslateTransform />
                  </TransformGroup>
               </Path.RenderTransform>
            </Path>
         </Border>
         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CheckStates">
               <VisualState x:Name="Checked">
                  <Storyboard>
                     <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="180" />
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Unchecked">
                  <Storyboard>
                     <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="0" />
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
      </Grid>
      <ControlTemplate.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
         </Trigger>
         <MultiTrigger>
            <MultiTrigger.Conditions>
               <Condition Property="ToggleButton.IsChecked" Value="True" />
               <Condition Property="IsMouseOver" Value="False" />
            </MultiTrigger.Conditions>
            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
         </MultiTrigger>
         <Trigger Property="UIElement.IsEnabled" Value="False">
            <Setter TargetName="Border" Property="Panel.Background" Value="{StaticResource DisabledBackground}" />
            <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource DisabledBackground}" />
            <Setter TargetName="ButtonBorder" Property="Border.BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
            <Setter Property="TextElement.Foreground" Value="{StaticResource DisabledForeground}" />
            <Setter TargetName="Arrow" Property="Stroke" Value="#999" />
            <Setter TargetName="Arrow" Property="StrokeThickness" Value="0" />
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>

   <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
      <Setter Property="AduAttach:BackgroundAttach.MouseOverBackground" Value="{StaticResource Brush}" />
      <Setter Property="Height" Value="30"/>
      <Setter Property="MinHeight" Value="22"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
               <Grid>
                  <Border Name="bg" BorderThickness="0,0,0,0" Background="{TemplateBinding Background}" BorderBrush="Transparent" />
                  <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0"/>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="bg"  Property="Background" Value="{Binding (AduAttach:BackgroundAttach.MouseOverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                     <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />
                  </Trigger>
                  <Trigger Property="IsSelected" Value="True">
                     <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />
                     <Setter TargetName="bg" Property="Opacity" Value=".5" />
                     <Setter TargetName="bg" Property="Background" Value="{Binding (AduAttach:BackgroundAttach.MouseOverBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style TargetType="{x:Type AduSkin:AduComboBox}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
      <Setter Property="TextElement.Foreground" Value="#FFF" />
      <Setter Property="TextElement.FontSize" Value="12" />
      <Setter Property="ToggleButtonColor" Value="#FFF" />
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="MinHeight" Value="26" />
      <Setter Property="Background" Value="#FFF"/>
      <Setter Property="AduAttach:BorderAttach.CornerRadius" Value="3"/>
      <Setter Property="Foreground" Value="{StaticResource Brush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource Brush}" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="ToggleButtonColor" Value="{StaticResource Brush}" />
      <Setter Property="ComBoxItemPanelBackground" Value="#FFF" />
      <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="5,0,0,0" />
      <Setter Property="InputHint" Value="请选择..." />
      <Setter Property="Control.Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type AduSkin:AduComboBox}">
               <ControlTemplate.Resources>
                  <Storyboard x:Key="Storyboard_Open">
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                     </DoubleAnimationUsingKeyFrames>
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.9" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                  <Storyboard x:Key="Storyboard_Close">
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                     </DoubleAnimationUsingKeyFrames>
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
               </ControlTemplate.Resources>
               <Grid Width="{TemplateBinding Width}">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="auto" />
                     <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid Grid.Column="1">
                     <AduSkin:AduToggleButton x:Name="ToggleButton" ClickMode="Press" Focusable="False" AduAttach:BorderAttach.CornerRadius="{TemplateBinding AduAttach:BorderAttach.CornerRadius}"
                                    IsChecked="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                    Template="{StaticResource ComboBoxToggleButtonTemplate}" Foreground="{TemplateBinding ToggleButtonColor}"
                                    BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"/>
                     <ContentPresenter Name="ContentSite" Margin="5, 3, 25, 3" HorizontalAlignment="Left"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False" />
                     <TextBlock Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="Left" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Opacity="0.25" IsHitTestVisible="False"
                                       Text="{TemplateBinding InputHint}">
                        <TextBlock.Style>
                           <Style TargetType="{x:Type TextBlock}">
                              <Style.Triggers>
                                 <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                       <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                 </MultiDataTrigger>
                                 <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                       <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                 </MultiDataTrigger>

                                 <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                       <Condition Binding="{Binding Path=Text.IsEmpty, ElementName=PART_EditableTextBox}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                 </MultiDataTrigger>
                              </Style.Triggers>
                           </Style>
                        </TextBlock.Style>
                     </TextBlock>
                     <TextBox Name="PART_EditableTextBox" Margin="5, 3, 25, 3" HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center" Background="Transparent" Focusable="True" IsReadOnly="False"
                                     Visibility="Hidden" Text="{TemplateBinding ComboBox.SelectionBoxItem}" Foreground="{TemplateBinding Foreground}">
                        <TextBox.Template>
                           <ControlTemplate TargetType="TextBox">
                              <Border x:Name="OuterBorder" Background="Transparent">
                                 <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" />
                              </Border>
                           </ControlTemplate>
                        </TextBox.Template>
                     </TextBox>

                     <!--  Popup showing items  -->
                     <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" VerticalOffset="-1" AllowsTransparency="True" PopupAnimation="Fade" >
                        <Border RenderTransformOrigin="0.5,0" 
                                CornerRadius="{TemplateBinding AduAttach:BorderAttach.CornerRadius}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding ComBoxItemPanelBackground}" 
                                MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                Padding="0,3" Margin="10" 
                                MinWidth="{TemplateBinding ActualWidth}" 
                                x:Name="DropDown" SnapsToDevicePixels="True">
                           <Border.RenderTransform>
                              <TransformGroup>
                                 <ScaleTransform />
                                 <SkewTransform />
                                 <RotateTransform />
                                 <TranslateTransform />
                              </TransformGroup>
                           </Border.RenderTransform>
                           <Border.Effect>
                              <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="0.2"/>
                           </Border.Effect>
                           <Grid>
                              <Grid.RowDefinitions>
                                 <RowDefinition Height="auto"/>
                                 <RowDefinition/>
                              </Grid.RowDefinitions>
                              <AduSkin:MetroTextBox  x:Name="PART_FilterTextBox"
                                    Height="26" Margin="5,2,5,5" InputHint="请输入关键字"
                                    Visibility="{Binding IsShowFilterBox, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibility}}" />
                              <AduSkin:MetroScrollViewer Grid.Row="1" Margin="0" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                 <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                 <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                              </AduSkin:MetroScrollViewer>
                           </Grid>
                        </Border>
                     </Popup>
                  </Grid>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                     <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="Storyboard_Open_BeginStoryboard" />
                     </Trigger.ExitActions>
                     <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Storyboard_Open_BeginStoryboard" Storyboard="{StaticResource Storyboard_Open}" />
                     </Trigger.EnterActions>
                  </Trigger>
                  <Trigger SourceName="ToggleButton" Property="IsChecked" Value="False">
                     <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="Storyboard_Close_BeginStoryboard" />
                     </Trigger.ExitActions>
                     <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Storyboard_Close_BeginStoryboard" Storyboard="{StaticResource Storyboard_Close}" />
                     </Trigger.EnterActions>
                  </Trigger>
                  <Trigger Property="UIElement.IsEnabled" Value="False">
                     <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBox.Disabled.Foreground}" />
                     <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource ComboBox.Disabled.Foreground}" />
                  </Trigger>
                  <Trigger Property="ItemsControl.IsGrouping" Value="True">
                     <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                  </Trigger>
                  <Trigger Property="ComboBox.IsEditable" Value="True">
                     <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                     <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                     <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                  </Trigger>
                  <Trigger Property="Validation.HasError" Value="True">
                     <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

</ResourceDictionary>